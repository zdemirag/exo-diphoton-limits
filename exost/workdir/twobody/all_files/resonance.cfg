[Variables]

# observable
mass       = [1000.0, 200, 2000];

# signal parameters
peak       = [1000.0, 250, 1500]; fix;
width      = [30.0]; fix;
mass_resolution_abs = [10.0]; fix;

# background parameters
a = [-0.00691235]; fix;
b = [-2.404]; fix;

# parameter of interest
xsec = [0.0, 0.0, 2.0]; float;

# other model parameters
lumi = [39.96]; fix;
eff  = [0.1]; fix;
nbkg_est = [30.0]; fix;

# systematics (lognormal)
nsig_kappa = [1.1]; fix;
nbkg_kappa = [1.1]; fix;
mass_kappa = [1.1]; fix;

# parameter of interest
poi_set    = set(xsec);

# nuisance parameters
nsig_nuis = [1.0, 0.5, 1.5]; float;
nbkg_nuis = [1.0, 0.5, 1.5]; float;
mass_nuis = [1.0, 0.5, 1.5]; float;
nuis_set  = set(nsig_nuis, nbkg_nuis, mass_nuis);

# weight for loading data
weight = [1.0]; fix;




[Data]

data_ee = root(dataTree, 'Dielectron data', ./zprime_ee_vladlen_massHist35ForPreApproval_22nov2010.root, mass, weight);
data_mumu = root(dimuons,  'Dimuon data',     ./zpr_mumu_gena_40pb_20nov2010.root, mass, weight);






[Model]
# signal yield
nsig = prod(xsec, lumi, eff, nsig_nuis);

# background yield
nbkg = prod(nbkg_est, nbkg_nuis);

# background shape
bkgpdf = CEXPR('exp(mass*a)*pow(mass,b)', mass, a, b);

# signal shape with resolution and energy scale
mass_scaled = prod(mass, mass_nuis);
sigpdf    = Voigtian(mass_scaled, peak, width, mass_resolution_abs);

# extended S+B likelihood, single channel
model_core  = SUM(nsig*sigpdf, nbkg*bkgpdf);

# systematics PDFs
syst_nsig = Lognormal(nsig_nuis, 1.0, nsig_kappa);
syst_nbkg = Lognormal(nbkg_nuis, 1.0, nbkg_kappa);
syst_mass  = Lognormal(mass_nuis, 1.0, mass_kappa);

# full model pdf
model = PROD(model_core, syst_nsig, syst_nbkg, syst_mass);

# prior pdf
prior = Uniform(xsec);





[Model Config]
name = mc
model = model
poi = poi_set
nuisance_parameters = nuis_set
prior = prior




[MCMC Calculator]
action_name             = mcmc
model_config            = mc
data                    = data
ph_cache_size           = 100
confidence_level        = 0.95
left_side_tail_fraction = 0.0
burn_in_steps           = 10
n_bins                  = 100
number_of_iterations    = 10000
make_posterior_plot     = True

