[Variables]

# observable
n = [0.0, 0.0, 10.0]; float;
obs_set = set(n);

# parameter of interest
xsec = [0.0, 0.0, 1.0]; float;
poi_set    = set(xsec);

# other model parameters
lumi = [36.1]; fix;
efficiency  = [0.386]; fix;
bkg_est = [0.0207]; fix;

# nuisance parameters
lumi_nuis = [1.0, 0.4, 1.6]; float;
nsig_nuis = [1.0, 0.5, 1.5]; float;
nbkg_nuis = [1.0, 0.5, 1.5]; float;
nuis_set  = set(lumi_nuis, nsig_nuis, nbkg_nuis);

# systematics (lognormal)
lumi_kappa = [1.110]; fix;
nsig_kappa = [1.065]; fix;
nbkg_kappa = [1.101]; fix;





[Data]
data = ascii(dummy, "Diphoton data", diphoton_data_example.ascii, obs_set);






[Model]
# signal yield
nsig = prod(xsec, lumi, efficiency, lumi_nuis, nsig_nuis);

# background yield
nbkg = prod(bkg_est, nbkg_nuis);

# core model
yield = sum(nsig, nbkg);
model_core = Poisson(n, yield);

# extended likelihood
model_core_ext = SUM(dummy[1.0]*model_core);

# systematics PDFs
syst_lumi = Lognormal(lumi_nuis, 1.0, lumi_kappa);
syst_nsig = Lognormal(nsig_nuis, 1.0, nsig_kappa);
syst_nbkg = Lognormal(nbkg_nuis, 1.0, nbkg_kappa);

# full model pdf
model = PROD(model_core_ext, syst_lumi, syst_nsig, syst_nbkg);

# prior pdf
prior = Uniform(xsec);





[Model Config]
name = mc
model = model
poi = poi_set
nuisance_parameters = nuis_set
prior = prior




[MCMC Calculator]
action_name             = mcmc
model_config            = mc
data                    = data
ph_cache_size           = 100
confidence_level        = 0.95
left_side_tail_fraction = 0.0
burn_in_steps           = 500
n_bins                  = 100
number_of_iterations    = 100000
make_posterior_plot     = True

