[Variables]

# observable
mass = [1000.0, 200, 2000];

# signal parameters
peak     = [1000.0, 250, 1500]; fix;
width_p0 = [-1.2979]; fix;
width_p1 = [0.0309338]; fix;
res_p0   = [0.0138]; fix;
res_p1   = [0.00009315]; fix;
res_p2   = [-0.00000001077]; fix;

# background parameters
a = [-0.00691235]; fix;
b = [-2.404]; fix;

# parameter of interest
xsec = [0.0, 0.0, 0.5]; float;

# other model parameters
lumi     = [39.96]; fix;
eff_p0   = [0.901]; fix;
eff_p1   = [-830000.0]; fix;
eff_p2   = [-.0000188]; fix;
nbkg_est = [35.0]; fix;

# systematics (lognormal)
lumi_kappa = [1.11]; fix;
nsig_kappa = [1.031]; fix;
nbkg_kappa = [1.20]; fix;
mass_kappa = [1.01]; fix;

# parameter of interest
poi_set = set(xsec);

# nuisance parameters
lumi_nuis = [1.0, 0.4, 1.6]; float;
nsig_nuis = [1.0, 0.3, 1.7]; float;
nbkg_nuis = [1.0, 0.0, 2.0]; float;
mass_nuis = [1.0, 0.9, 1.1]; fix;
nuis_set  = set(lumi_nuis, nsig_nuis, nbkg_nuis);

# weight for loading data
weight = [1.0]; fix;

# dummy variables
# this is a workaround for the RooWorkspace limitation
# in resolving naming conflicts in embedded autogenerated
# code
eff_a  = [0.739];  fix;
eff_b  = [-14.698];fix;
eff_c  = [-43.930]; fix;
res_c    = [0.901]; fix;
res_s    = [17.238]; fix;
res_n    = [0.0]; fix;



[Data]

data = root(dimuons,  'Dimuon data',     ./zpr_mumu_gena_40pb_20nov2010.root, mass, weight);






[Model]
# signal yield
eff  = cexpr('0.963*(eff_p0+eff_p1/peak/peak/peak+eff_p2*peak)', eff_p0, eff_p1, peak, eff_p2);
eff_dummy  = cexpr('eff_a+eff_b/(peak+eff_c)', eff_a, eff_b, peak, eff_c);
nsig = prod(xsec, lumi, eff, lumi_nuis, nsig_nuis);

# background yield
nbkg = prod(nbkg_est, nbkg_nuis);

# background shape
bkgpdf = CEXPR('exp(mass*a)*pow(mass,b)', mass, a, b);

# signal shape with resolution and energy scale
mass_scaled = prod(mass, mass_nuis);
width       = sum(width_p0, prod(width_p1,peak));
sigma_rel   = sum(res_p0, prod(res_p1,peak), prod(prod(res_p2,peak),peak));
sigma       = prod(sigma_rel, peak);
sigpdf      = Voigtian(mass_scaled, peak, width, sigma);

# extended S+B likelihood, single channel
model_core = SUM(nsig*sigpdf, nbkg*bkgpdf);

# systematics PDFs
syst_lumi = Lognormal(lumi_nuis, 1.0, lumi_kappa);
syst_nsig = Lognormal(nsig_nuis, 1.0, nsig_kappa);
syst_nbkg = Lognormal(nbkg_nuis, 1.0, nbkg_kappa);
syst_mass = Lognormal(mass_nuis, 1.0, mass_kappa);

# full model pdf
model = PROD(model_core, syst_lumi, syst_nsig, syst_nbkg);

# prior pdf
prior = Uniform(xsec);

# dummy functions
sigma_rel_dummy   = cexpr('0.01*sqrt(res_s*res_s/peak + res_n*res_n/peak/peak + res_c*res_c)', res_s, peak, res_n, res_c);




[Model Config]
name                = mc
model               = model
poi                 = poi_set
nuisance_parameters = nuis_set
prior               = prior




[MCMC Calculator]
action_name             = mcmc
model_config            = mc
data                    = data
ph_cache_size           = 100
confidence_level        = 0.95
left_side_tail_fraction = 0.0
n_bins                  = 100
burn_in_steps           = 10
number_of_iterations    = 50000
make_posterior_plot     = True

