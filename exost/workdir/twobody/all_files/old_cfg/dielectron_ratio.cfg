[Variables]

# observable
mass = [1000.0, 200, 3000];
obs_set = set(mass);

# signal parameters
peak     = [2000.0, 200, 3000]; fix;
width_p0 = [-1.2979]; fix;
width_p1 = [0.0309338]; fix;

# resolution
# Dec 20, 2011, AN-11-444, rev 92124, tab. 17
res_s    = [14.185]; fix;
res_n    = [98.929]; fix;
res_c    = [1.597]; fix;

# background parameters
# Dec 20, 2011, AN-11-444, rev 92124, fig. 22
a = [-0.002591]; fix;
b = [-3.533]; fix;

# parameter of interest
ratio = [0.0, 0.0, 0.17]; float;

# other model parameters
# Dec 20, 2011, AN-11-444, rev 92124, tab. 17
#lumi     = [4600.0]; fix;
nbkg_est = [3171.0]; fix;
nz       = [603618.0]; fix;

# exponent/eff_z (0.001/0.109)
# Dec 20, 2011, AN-11-444, rev 92124, tab. 17
nsig_scale = [0.009174]; fix;

# eff*acc SSM Z'
# Dec 20, 2011, AN-11-444, rev 92124, tab. 17
# scale not needed for ratio
eff_scale = [1.0]; fix;
eff_a     = [0.7006]; fix;
eff_b     = [-91.25]; fix;
eff_c     = [53.65]; fix;

# systematics (lognormal)
#lumi_kappa = [1.06]; fix;
# Dec 20, 2011, AN-11-444, rev 92124, tab. 17
nsig_kappa = [1.08]; fix;
nbkg_kappa = [1.15]; fix;
mass_kappa = [1.01]; fix;

# parameter of interest
poi_set = set(ratio);

# global observables
glob_nsig = [0,-5,5]; fix;
glob_nbkg = [0,-5,5]; fix;
glob_mass = [0,-5,5]; fix;
global_obs_set = set(glob_nsig, glob_nbkg, glob_mass);

# nuisance parameters
beta_nsig = [0,-5,5]; float;
beta_nbkg = [0,-5,5]; float;
beta_mass = [0,-5,5]; float;
nuis_set  = set(beta_nsig, beta_nbkg, beta_mass);

# weight for loading data
weight = [1.0]; fix;

# dummy variables
eff_p0   = [0.901]; fix;
eff_p1   = [-830000.0]; fix;
eff_p2   = [-.0000188]; fix;





[Data]
# 4600/ipb, 20 Dec 2011
#data = root(eleDataTree, 'Dielectron data', data/samsSelectedEvents4600FinalLite_20dec2011v1.root, mass, weight);
data = root(eleDataTree, 'Dielectron data', data/samsSelectedEvents4600FinalLiteNoEEEE_21feb2012v1.root, mass, weight);




[Model]
# eff*acc SSM Z'
eff  = cexpr('eff_scale*(eff_a+eff_b/(peak+eff_c))', eff_scale, eff_a, eff_b, peak, eff_c);
# dummy to accomodate combination with dimuons
eff_dummy = cexpr('eff_scale*(eff_a+eff_b/(peak+eff_c)/(peak+eff_c)/(peak+eff_c))', eff_scale, eff_a, eff_b, peak, eff_c);

# signal yield + systematics
nsig_nuis = cexpr('pow(nsig_kappa,beta_nsig)', nsig_kappa, beta_nsig);
nsig = prod(nsig_scale, ratio, nz, eff, nsig_nuis);
syst_nsig = Gaussian(beta_nsig, glob_nsig, 1);

# background yield + systematics
nbkg_nuis = cexpr('pow(nbkg_kappa,beta_nbkg)', nbkg_kappa, beta_nbkg);
nbkg = prod(nbkg_est, nbkg_nuis);
syst_nbkg = Gaussian(beta_nbkg, glob_nbkg, 1);

# background shape
bkgpdf = CEXPR('exp(mass*a)*pow(mass,b)', mass, a, b);

# signal shape with resolution and energy scale
mass_nuis = cexpr('pow(mass_kappa,beta_mass)', mass_kappa, beta_mass);
mass_scaled = prod(mass, mass_nuis);
width       = sum(width_p0, prod(width_p1,peak));
sigma_rel   = cexpr('0.01*sqrt(res_s*res_s/peak + res_n*res_n/peak/peak + res_c*res_c)', res_s, peak, res_n, res_c);
sigma       = prod(sigma_rel, peak);
sigpdf      = Voigtian(mass_scaled, peak, width, sigma);
syst_mass   = Gaussian(beta_mass, glob_mass, 1);

# extended S+B likelihood, single channel
model_core = SUM(nsig*sigpdf, nbkg*bkgpdf);

# full model pdf
model = PROD(model_core, syst_nsig, syst_nbkg, syst_mass);

# prior pdf
prior = Uniform(ratio);





[Model Config]
name                = mc
model               = model
observables         = obs_set
global_observables  = global_obs_set
poi                 = poi_set
nuisance_parameters = nuis_set
prior               = prior




[MCMC Calculator]
action_name             = mcmc
model_config            = mc
data                    = data
ph_cache_size           = 100
confidence_level        = 0.95
left_side_tail_fraction = 0.0
n_bins                  = 100
burn_in_steps           = 500
number_of_iterations    = 10000
make_posterior_plot     = True

# 10000 iter, 100 burn in, 4600/pb
# 0.0013, 56s, peak = 2000 GeV
# 0.0167, 84s, peak =  400 GeV
#
# Z' limits between [1800,2100]
# GR limits between [1550,1950]
#
# assuming 50K iter jobs, ~6.5 per hour, ~50 per 8 hour job (should run 50 as in mumu)
#   run 50 calc per job (~8 hours each)
#   300-2500 with 50 GeV step: 45 jobs
#   1700-2200 with 50 GeV step: 11 jobs (for Z' mass limits)
#   1450-2050 with 50 GeV step: 13 jobs (for GR mass limits)